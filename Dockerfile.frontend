# 前端构建阶段
FROM node:16.20.2-alpine as builder

# 设置工作目录
WORKDIR /app

# 设置npm镜像源
RUN npm config set registry https://registry.npmmirror.com

# 复制package文件
COPY frontend/package*.json ./

# 安装依赖
RUN npm install

# 复制源代码
COPY frontend/ .

# 添加构建参数支持
ARG VITE_BACKEND_URL
ENV VITE_BACKEND_URL=$VITE_BACKEND_URL

# 构建前端
RUN npm run build

# 检查构建结果
RUN ls -la dist/ && echo "=== 构建产物检查 ===" && \
    echo "index.html:" && cat dist/index.html && \
    echo "=== assets目录 ===" && ls -la dist/assets/

# 生产阶段 - Nginx
FROM nginx:alpine

# 设置Alpine镜像源
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

# 创建nginx日志目录并设置权限
RUN mkdir -p /var/log/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chmod -R 755 /var/log/nginx

# 删除默认的nginx内容
RUN rm -rf /usr/share/nginx/html/*

# 复制构建产物到nginx目录
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制nginx配置
COPY nginx.conf /etc/nginx/nginx.conf

# 检查复制的文件
RUN echo "=== Nginx静态文件检查 ===" && \
    ls -la /usr/share/nginx/html/ && \
    echo "=== index.html内容 ===" && \
    cat /usr/share/nginx/html/index.html && \
    echo "=== assets目录 ===" && \
    ls -la /usr/share/nginx/html/assets/ | head -10

# 创建一个简单的50x错误页面
RUN echo '<!DOCTYPE html><html><head><title>Error</title></head><body><h1>Service Temporarily Unavailable</h1><p>Please try again later.</p></body></html>' > /usr/share/nginx/html/50x.html
# 暴露端口
EXPOSE 80

# 启动nginx
CMD ["nginx", "-g", "daemon off;"] 